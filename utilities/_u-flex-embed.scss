/* ============================================================================
   @UTILITIES -> FLEX EMBED
   ========================================================================= */


/**
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/xFHfk#flex-embed
 *
 * @credit
 * https://github.com/suitcss/components-flex-embed/blob/master/lib/flex-embed.
 * css
 */


/**
 * Base.
 */

@include generate-at-breakpoints(u-flex-embed) {
  display: block;
  position: relative;
  overflow: hidden;
}


  /**
   * The aspect-ratio hack is applied to an empty element because it allows
   * the component to respect `max-height`.
   *
   * N.B. default aspect ratio is 1:1.
   */

  @include generate-at-breakpoints(u-flex-embed__ratio) {
    display: block;
    padding-bottom: 100%;
    width: 100%;
  }


  /**
   * Modifiers: common aspect ratios.
   */

  // 16:9 aspect ratio
  @include generate-at-breakpoints(u-flex-embed__ratio--16-by-9) {
    padding-bottom: 56.25%;
  }

  // 3:1 aspect ratio
  @include generate-at-breakpoints(u-flex-embed__ratio--3-by-1) {
    padding-bottom: (100/3)*1%;
  }

  // 2:1 aspect ratio
  @include generate-at-breakpoints(u-flex-embed__ratio--2-by-1) {
    padding-bottom: 50%;
  }

  // 4:3 aspect ratio
  @include generate-at-breakpoints(u-flex-embed__ratio--4-by-3) {
    padding-bottom: 75%;
  }


  /**
   * The content e.g. a video (`iframe`).
   */

  @include generate-at-breakpoints(u-flex-embed__content) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }